#!/usr/bin/env nix-shell
#!nix-shell -i bash -I ./nix --packages bash coreutils nix-prefetch-git
set -euo pipefail

scriptdir="$(realpath $(dirname ${BASH_SOURCE[0]}))"
nixdir="$scriptdir/nix"

# "nixpkgs-channels" is a mirror of "nixpkgs" with branches that track release channels
repo=https://github.com/NixOS/nixpkgs-channels.git

# "nixos-unstable" is a branch which points to the latest commit that has passed their CI
rev=${1:-refs/heads/nixos-unstable} 

# "nix-prefetch-git" is a tool that downloads and prints information about a git reference
# Notably, it includes a commit sha and content hash
newCommit=$(nix-prefetch-git --url $repo --rev $rev)

# "default.nix" uses this file to pin exact dependencies
echo "$newCommit" > nix/nixpkgs.json

# Generate nix files for a node 8 project with the npm dependency expo
pushd nix/nodepackages
nix run -f $nixdir nodePackages.node2nix --command \
  node2nix \
  --strip-optional-dependencies \
  --nodejs-10 \
  --input <(echo '["expo-cli"]')
popd

# Generate nix files for the bundix ruby gem
pushd nix/xcpretty
rm Gemfile.lock
nix run -f $nixdir bundler --command bundle install
nix run -f $nixdir bundix --command bundix
popd

# Update all yarn.lock files
nix run -f $nixdir fd yarn parallel bash --command bash -c "fd -a yarn.lock $scriptdir | xargs -n 1 dirname | parallel -j 1 'cd {} && echo {} && yarn install --force'"
